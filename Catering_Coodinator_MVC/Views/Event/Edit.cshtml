@model CateringCoordinator.Models.EventModels.EventEdit

@{
    ViewBag.Title = "Edit";
}
<body class="body-content" id="eventEdit">
<h2><strong>Edit An Event</strong></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model =>model.EventId)

        <div class="form-group">
            @Html.LabelFor(model=>model.CustomerId,"Customer Name", htmlAttributes: new { @class = "control-label col-md-2 font-size" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerId",null, htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FoodId,"Food Name", htmlAttributes: new { @class = "control-label col-md-2 font-size" })
            <div class="col-md-10">
                @Html.DropDownList("FoodId",null, htmlAttributes: new  {@class = "form-control" } )
                @Html.ValidationMessageFor(model => model.FoodId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumOfGuest, htmlAttributes: new { @class = "control-label col-md-2 font-size" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumOfGuest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumOfGuest, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2 font-size" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DateOfEvent, htmlAttributes: new { @class = "control-label col-md-2 font-size" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfEvent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfEvent, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "", new{@class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
    </body>